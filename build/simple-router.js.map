{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///simple-router.js","webpack:///webpack/bootstrap 04f5504223cedca0c08b","webpack:///./src/index.js","webpack:///./src/Link.js","webpack:///./src/Route.js","webpack:///./src/Helpers.js","webpack:///./src/Outlet.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","value","SimpleRouter","undefined","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_Link","_Route","_Outlet","config","_config","_parser","DOMParser","_links","_outlets","_routes","_routerState","_cssLoaded","_jsLoaded","_onCssLoaded","_onJsLoaded","_current","_ignoreHashChange","_defaultRoute","_notFoundRoute","window","onhashchange","onHashChange","bind","findOutlets","findLinks","_mainOutlet","getMainOutlet","location","hash","event","link","url","substring","outlet","initRouteHandling","_this","selector","arguments","baseElement","document","clearDeadOutlets","querySelectorAll","forEach","element","index","array","isRegistered","push","Outlet","getAttributeValueByName","find","item","isMain","filter","stillExists","body","contains","possibleOutlet","_this2","clearDeadLinks","targetOutlet","findOutletByName","Link","handleLinkClick","onclick","specifiedRoute","linkParts","split","params","route","routeLinkParts","routeUrl","doesItMatch","console","log","startsWith","linkProvided","preventDefault","ele","possibleLink","selectedRoute","findRoute","state","handleRoute","postRouteProcessing","shouldFetch","preFetchContent","fetch","templateTextInstance","content","html","template","postFetch","method","headers","_this3","user","password","xhr","XMLHttpRequest","open","onerror","handleFetchFailure","header","setRequestHeader","onreadystatechange","readyState","DONE","responseText","loaded","send","evt","postFetchContent","shouldLoad","preContentLoad","load","postLoad","_this4","head","getElementsByTagName","needToWait","addContentString","css","createElement","rel","type","href","media","onload","appendChild","js","src","postContentLoad","handler","_currnet","postLinkHandler","data","error","_len","args","Array","_key","Route","events","attrName","attributes","getNamedItem","clickHandler","_Helpers","styleUrl","scriptUrl","postRouteHandling","htmlSection","innerHTML","isHTMLString","str","doc","parseFromString","HTML_MIME","from","childNodes","some","node","nodeType","XML_MIME","CSS_MIME","JS_MIME","children","removeChild"],"mappings":"CAAA,SAAAA,EAAAC,GACA,mBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,QACA,sBAAAG,gBAAAC,IACAD,UAAAH,OACA,CACA,GAAAK,GAAAL,GACA,QAAAM,KAAAD,IAAA,gBAAAJ,iBAAAF,GAAAO,GAAAD,EAAAC,KAECC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAJ,EAAAI,EACAE,GAAA,EACAX,WAUA,OANAO,GAAAE,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAU,KA4DA,OAhCAF,GAAAK,EAAAN,EAGAC,EAAAM,EAAAJ,EAGAF,EAAAO,EAAA,SAAAf,EAAAgB,EAAAC,GACAT,EAAAU,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAT,EAAAgB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAO,GAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDnB,EAAAsB,EAAA,GAGAtB,IAAAuB,EAAA,KDgBM,SAAU9B,EAAQD,EAASQ,GAEjC,YAkBA,SAASwB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAfhHhB,OAAOC,eAAepB,EAAS,cAC3BoC,OAAO,IAEXpC,EAAQqC,iBAAeC,EAEvB,IAAIC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOZ,UAAY,eAAkBc,IAElQE,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI1C,GAAI,EAAGA,EAAI0C,EAAMC,OAAQ3C,IAAK,CAAE,GAAI4C,GAAaF,EAAM1C,EAAI4C,GAAW3B,WAAa2B,EAAW3B,aAAc,EAAO2B,EAAW5B,cAAe,EAAU,SAAW4B,KAAYA,EAAWC,UAAW,GAAM/B,OAAOC,eAAe0B,EAAQG,EAAWE,IAAKF,IAAiB,MAAO,UAAUf,EAAakB,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBX,EAAYN,UAAWwB,GAAiBC,GAAaR,EAAiBX,EAAamB,GAAqBnB,MEzFhiBoB,EAAA9C,EAAA,GACA+C,EAAA/C,EAAA,GACAgD,EAAAhD,EAAA,EFkGmBR,GEhGNqC,aFgG6B,WE/FtC,QAAAA,GAAYoB,GAAQzB,EAAA1B,KAAA+B,GAChB/B,KAAKoD,QAAUD,EACfnD,KAAKqD,QAAU,GAAIC,WACnBtD,KAAKuD,UACLvD,KAAKwD,YACLxD,KAAKyD,WACLzD,KAAK0D,gBACL1D,KAAK2D,YAAa,EAClB3D,KAAK4D,WAAY,EACjB5D,KAAK6D,aAAe,KACpB7D,KAAK8D,YAAc,KACnB9D,KAAK+D,SAAW,KAChB/D,KAAKgE,mBAAoB,EACzBhE,KAAKiE,cAAgB,KAIrBjE,KAAKkE,eAAiB,KAItBC,OAAOC,aAAepE,KAAKqE,aAAaC,KAAKtE,MAC7CA,KAAKuE,cACLvE,KAAKwE,YAELxE,KAAKyE,YAAczE,KAAK0E,gBF+d5B,MA1XApC,GAAaP,IACTc,IAAK,OACLf,MAAO,WElG6B,IAAhCqC,OAAOQ,SAASC,KAAKlC,OACrByB,OAAOQ,SAASC,KAAO,IAEvB5E,KAAKqE,kBFuGTxB,IAAK,eACLf,MAAO,SEpGE+C,GACT,GAAI7E,KAAKgE,kBAOLhE,KAAKgE,mBAAoB,MAPD,CACxB,GAAIc,IACAC,IAAKZ,OAAOQ,SAASC,KAAKI,UAAU,GACpCC,OAAQjF,KAAKyE,YAEjBzE,MAAKkF,kBAAkBJ,OF0G3BjC,IAAK,cACLf,MAAO,WErGqD,GAAAqD,GAAAnF,KAApDoF,EAAoDC,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAzC,gBAAiBC,EAAwBD,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAVE,QAQlD,IAPAvF,KAAKwF,mBACLF,EAAYG,iBAAZ,IAAiCL,EAAjC,KAA8CM,QAAQ,SAACC,EAASC,EAAOC,GAC9DF,EAAQG,eACTH,EAAQG,cAAe,EACvBX,EAAK3B,SAASuC,KAAK,GAAA7C,GAAA8C,OAAWL,EAASR,EAAKc,wBAAwBN,EAASP,OAElFpF,OACIA,KAAK0E,gBACR,KAAM,gCF8GV7B,IAAK,gBACLf,MAAO,WE1GP,MAAO9B,MAAKwD,SAAS0C,KAAK,SAACC,GACvB,OAAuB,IAAhBA,EAAKC,YF+GhBvD,IAAK,mBACLf,MAAO,WE3GP9B,KAAKwD,SAAWxD,KAAKwD,SAAS6C,OAAO,SAACpB,EAAQW,EAAOC,GACjD,GAAMS,GAAcf,SAASgB,KAAKC,SAASvB,EAAOU,QAKlD,QAJoB,IAAhBW,IACArB,EAAOU,QAAQG,cAAe,EAC9Bb,EAAOU,QAAU,MAEdW,OFgHXzD,IAAK,mBACLf,MAAO,SE7GMpB,GAIb,MAHaV,MAAKwD,SAAS0C,KAAK,SAACO,GAC7B,MAAQA,GAAe/F,MAAQA,GAChCV,SFiHH6C,IAAK,YACLf,MAAO,WE9G+C,GAAA4E,GAAA1G,KAAhDoF,EAAgDC,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAArC,YAAaC,EAAwBD,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAVE,QAC5CvF,MAAK2G,iBACLrB,EAAYG,iBAAZ,IAAiCL,EAAjC,KAA8CM,QAAQ,SAACC,GACnD,IAAKA,EAAQG,aAAc,CACvB,GAAIc,GAAeF,EAAKG,iBAAiBH,EAAKT,wBAAwBN,EAAS,kBAAoBe,EAAKhC,eACxGgC,GAAKnD,OAAOwC,KAAK,GAAA/C,GAAA8D,KAASnB,EAASiB,EAAcF,EAAKK,gBAAgBzC,KAArBoC,OAEtD1G,SFsHH6C,IAAK,iBACLf,MAAO,WEnHP9B,KAAKuD,OAASvD,KAAKuD,OAAO8C,OAAO,SAACvB,GAC9B,GAAMwB,GAAcf,SAASgB,KAAKC,SAAS1B,EAAKa,QAMhD,QALoB,IAAhBW,IACAxB,EAAKa,QAAQG,cAAe,EAC5BhB,EAAKa,QAAQqB,QAAU,KACvBlC,EAAKa,QAAU,MAEZW,OFwHXzD,IAAK,YACLf,MAAO,SErHDgD,GACN,GAAImC,GAAkBnC,EAAKC,KAAO/E,KAAKiE,cAAca,KAAQ9E,KAAKiE,cAAgB,KAC5EiD,EAAYpC,EAAKC,IAAIoC,MAAM,KAC7BC,EAAS,IAmCb,OAhCIH,GADa,MAAbnC,EAAKC,IACY/E,KAAKiE,cAELjE,KAAKyD,QAAQyC,KAAK,SAACmB,GAChC,GAAMC,GAAiBD,EAAME,SAASJ,MAAM,KACxCK,GAAc,CAClB,IAAIF,EAAe5E,SAAWwE,EAAUxE,OAAQ,CAC5C0E,IACA,KAAK,GAAIrH,GAAI,EAAGA,EAAIuH,EAAe5E,OAAQ3C,IACvC,GAAImH,EAAUnH,KAAOuH,EAAevH,GAChC0H,QAAQC,IAAI,0BACT,KAA0C,IAAtCJ,EAAevH,GAAG4H,WAAW,KAEjC,CACHF,QAAQC,IAAI,qBACZF,GAAc,CACd,OAJAJ,EAAOE,EAAevH,GAAGiF,UAAU,IAAMkC,EAAUnH,QAQ3DyH,IAAc,CAElB,OAAOA,IACRxH,MAGFiH,IACDA,EAAiBjH,KAAKkE,eACtBkD,GACIQ,aAAc9C,EAAKC,OAKvBsC,MAAOJ,EACPG,OAAQA,MF2HZvE,IAAK,kBACLf,MAAO,SExHK+C,GACZA,EAAMgD,gBACN,IAAIC,GAAMjD,EAAMrC,OACZsC,EAAO9E,KAAKuD,OAAO2C,KAAK,SAAC6B,GACzB,MAAOD,KAAQC,EAAapC,SAEhC3F,MAAKgE,mBAAoB,EACzBG,OAAOQ,SAASC,KAAOE,EAAKC,IAC5B/E,KAAKkF,kBAAkBJ,MF2HvBjC,IAAK,oBACLf,MAAO,SEzHQgD,GACf,GAAMkD,GAAgBhI,KAAKiI,UAAUnD,GAC/BoD,GACFpD,KAAMA,EACNuC,MAAOW,EAAcX,MACrBD,OAAQY,EAAcZ,OAE1BpH,MAAKmI,YAAYD,MF4HjBrF,IAAK,cACLf,MAAO,SE1HCoG,GAA6B7C,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,IAAAA,UAAA,EAEjC6C,GAAMb,MAAMe,qBACZF,EAAMb,MAAMe,oBAAoBF,IAGL,IAA5BlI,KAAKqI,YAAYH,IAEZA,EAAMb,MAAMiB,iBACZJ,EAAMb,MAAMiB,gBAAgBJ,GAGhClI,KAAKuI,MAAML,KAEXA,EAAMM,qBAAuBN,EAAMb,MAAMoB,QAAQC,KAAKC,SACtD3I,KAAK4I,UAAUV,OFgInBrF,IAAK,QACLf,MAAO,SE5HLoG,GAAqE,GAA9DW,GAA8DxD,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAArD,MAAOyD,EAA8CzD,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAApC,KAAoC0D,EAAA/I,KAA9BgJ,EAA8B3D,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAvB,KAAM4D,EAAiB5D,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAN,KAC7D6D,EAAM,GAAIC,eACdD,GAAIE,KAAKP,EAAQX,EAAMb,MAAMoB,QAAQC,KAAK3D,KAAK,EAAMiE,EAAMC,GAC3DC,EAAIG,QAAUrJ,KAAKsJ,mBAChBR,GACCA,EAAQpD,QAAQ,SAAS6D,GACrBL,EAAIM,iBAAiBD,EAAO7I,KAAM6I,EAAOzH,QAC1C9B,MAEPkJ,EAAIO,mBAAqB,WAClBP,EAAIQ,aAAeP,eAAeQ,OAEjCzB,EAAMb,MAAMoB,QAAQC,KAAKC,SAAWO,EAAIU,aACxC1B,EAAMb,MAAMoB,QAAQC,KAAKmB,QAAS,EAClC3B,EAAMM,qBAAuBU,EAAIU,aACjCb,EAAKH,UAAUV,KAGvBgB,EAAIY,UFuIJjH,IAAK,qBACLf,MAAO,SEpIQiI,GACf,KAAMA,MFuINlH,IAAK,YACLf,MAAO,SErIDoG,GACFA,EAAMb,MAAM2C,kBACZ9B,EAAMb,MAAM2C,iBAAiB9B,GAG9BlI,KAAKiK,WAAW/B,IACXA,EAAMb,MAAM6C,gBACZhC,EAAMb,MAAM6C,eAAehC,GAI/BlI,KAAKmK,KAAKjC,IAGVlI,KAAKoK,SAASlC,MFwIlBrF,IAAK,OACLf,MAAO,SErINoG,GAAO,GAAAmC,GAAArK,KACJsK,EAAO/E,SAASgF,qBAAqB,QAAQ,GAC7CC,GAAa,CACXtC,GAAMM,sBACRN,EAAMpD,KAAKG,OAAOwF,iBAAiBvC,EAAMM,qBAG7C,IAAMC,GAAUP,EAAMb,MAAMoB,OAE5B,IAAKA,EAAQiC,MAAQjC,EAAQiC,IAAIb,OAAQ,CACrCW,GAAa,CACb,IAAI1F,GAAOS,SAASoF,cAAc,OAClC7F,GAAK8F,IAAO,aACZ9F,EAAK+F,KAAO,WACZ/F,EAAKgG,KAAOrC,EAAQiC,IAAI3F,IACxBD,EAAKiG,MAAQ,MACbjG,EAAKkG,OAAS,WACV9C,EAAMb,MAAMoB,QAAQiC,IAAIb,QAAS,EACjCQ,EAAKD,SAASlC,IAElBoC,EAAKW,YAAYnG,GAGrB,GAAK2D,EAAQyC,KAAOzC,EAAQyC,GAAGrB,OAAQ,CACnCW,GAAa,CACb,IAAIU,GAAK3F,SAASoF,cAAc,SAChCO,GAAGL,KAAO,yBACVK,EAAGC,IAAM1C,EAAQyC,GAAGnG,IACpBmG,EAAGF,OAAS,WACR9C,EAAMb,MAAMoB,QAAQyC,GAAGrB,QAAS,EAChCQ,EAAKD,SAASlC,IAElBoC,EAAKW,YAAYC,GAGhBV,GACDxK,KAAKoK,SAASlC,MF6IlBrF,IAAK,WACLf,MAAO,SE1IFoG,GACL,GAAMO,GAAUP,EAAMb,MAAMoB,OACvBA,GAAQC,OAAQD,EAAQC,KAAKmB,QAAapB,EAAQiC,MAAOjC,EAAQiC,IAAIb,QAAapB,EAAQyC,KAAMzC,EAAQyC,GAAGrB,OAmB5GpC,QAAQC,IAAI,kBAlBRQ,EAAMb,MAAM+D,iBACZlD,EAAMb,MAAM+D,gBAAgBlD,GAG5BA,EAAMb,MAAMgE,SACZnD,EAAMb,MAAMgE,QAAQnD,GAGnBlI,KAAK+D,UACN/D,KAAK0D,aAAaqC,KAAK/F,KAAKsL,UAGhCtL,KAAK+D,SAAWmE,EAEZA,EAAMb,MAAMkE,iBACZrD,EAAMb,MAAMkE,gBAAgBrD,OFiJpCrF,IAAK,cACLf,MAAO,SE3ICoG,GACR,GAAIG,IAAc,EACZI,EAAUP,EAAMb,MAAMoB,OAI5B,OAHMA,GAAQC,MAAUD,EAAQC,KAAK3D,MAAQ0D,EAAQC,KAAKmB,SACtDxB,GAAc,GAEXA,KF8IPxF,IAAK,aACLf,MAAO,SE5ICoG,GACR,GAAI+B,IAAa,EACXxB,EAAUP,EAAMb,MAAMoB,OAU5B,OATMP,GAAMM,uBACRyB,GAAa,IAEZA,GAAgBxB,EAAQiC,KAASjC,EAAQiC,IAAI3F,MAC9CkF,GAAa,IAEZA,GAAgBxB,EAAQyC,IAAQzC,EAAQyC,GAAGnG,MAC5CkF,GAAa,GAEVA,KF+IPpH,IAAK,yBACLf,MAAO,SE7IY0J,GAEnB/D,QAAQgE,MAAM,6CAAd,KAA+DD,EAA/D,YAAAvJ,EAA+DuJ,GAAMA,MFiJrE3I,IAAK,gBACLf,MAAO,WE9IY,OAAA4J,GAAArG,UAAA3C,OAANiJ,EAAMC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,GAAAxG,UAAAwG,EACI,YAAnB5J,EAAO0J,EAAK,KAA+B,OAAZA,EAAK,IACpClE,QAAQC,IAAI,8BACZ1H,KAAKiE,cAAgB,GAAAhB,GAAA6I,MAAU,IAAKH,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAC1C,gBAAZA,GAAK,IACnBlE,QAAQC,IAAIiE,GACZ3L,KAAKyD,QAAQsC,KACT,GAAA9C,GAAA6I,MAAUH,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAEpC,OAAZA,EAAK,KACZlE,QAAQC,IAAI,gCACZ1H,KAAKkE,eAAiB,GAAAjB,GAAA6I,MAAUH,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,QFoJ7E9I,IAAK,kBACLf,MAAO,SEjJKyF,GACRvH,KAAKiE,cAAcc,KAAOwC,IAC1BvH,KAAKiE,cAAc8H,OAAS,SFqJhClJ,IAAK,0BACLf,MAAO,SElJc6D,EAASqG,GAC9B,MAAOrG,GAAQsG,WAAWC,aAAaF,GAAUlK,UFsJ9CC,MAKL,SAAUpC,EAAQD,EAASQ,GAEjC,YAOA,SAASwB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHhB,OAAOC,eAAepB,EAAS,cAC3BoC,OAAO,GAKApC,GG7gBEoH,KACT,QAAAA,GAAYnB,EAASV,EAAQkH,GAAczK,EAAA1B,KAAA8G,GACvC9G,KAAK2F,QAAUA,EACf3F,KAAK+E,IAAM/E,KAAK2F,QAAQsG,WAAWC,aAAa,aAAapK,MAC7D9B,KAAKiF,OAASA,EACdjF,KAAK2F,QAAQqB,QAAUmF,EAEvBnM,KAAK2F,QAAQG,cAAe,IHshB9B,SAAUnG,EAAQD,EAASQ,GAEjC,YAUA,SAASwB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAPhHhB,OAAOC,eAAepB,EAAS,cAC3BoC,OAAO,IAEXpC,EAAQoM,UAAQ9J,EIriBhB,IAAAoK,GAAAlM,EAAA,EJojBAR,GIljBaoM,MAST,QAAAA,GAAYvE,EAAUwE,GAA4D,GAApDpD,GAAoDtD,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAzC,KAAMgH,EAAmChH,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAxB,KAAMiH,EAAkBjH,UAAA3C,OAAA,OAAAV,KAAAqD,UAAA,GAAAA,UAAA,GAAN,IAAM3D,GAAA1B,KAAA8L,GAC9E9L,KAAKuH,SAAWA,EAEhBvH,KAAKoI,oBAAsB2D,EAAO3D,oBAClCpI,KAAKsI,gBAAkByD,EAAOzD,gBAC9BtI,KAAKgK,iBAAmB+B,EAAO/B,iBAC/BhK,KAAKqL,QAAUU,EAAOV,QACtBrL,KAAKkK,eAAiB6B,EAAO7B,eAC7BlK,KAAKoL,gBAAkBW,EAAOX,gBAC9BpL,KAAKuM,kBAAoBR,EAAOQ,iBAEhC,IAAIC,GAAc,IACb7D,KACD6D,KACI7D,EAAS8D,YAAkD,KAArC,EAAAL,EAAAM,cAAa/D,EAAS8D,YAC5CD,EAAY7D,SAAWA,EAAS8D,UAChCD,EAAY3C,QAAS,IACa,KAA3B,EAAAuC,EAAAM,cAAa/D,IACpB6D,EAAY7D,SAAWA,EACvB6D,EAAY3C,QAAS,IAErB2C,EAAYzH,IAAM4D,EAClB6D,EAAY3C,QAAS,IAI7B7J,KAAKyI,SACDC,KAAM8D,EACN9B,IAAQ2B,GACJtH,IAAKsH,EACLxC,QAAQ,GACR,KACJqB,GAAOoB,GACHvH,IAAKuH,EACLzC,QAAQ,GACR,QJwjBV,SAAUlK,EAAQD,EAASQ,GAEjC,YKnmBO,SAASwM,GAAaC,GACzB,GAAIC,IAAM,GAAItJ,YAAYuJ,gBAAgBF,EAAKG,EAE/C,OADalB,OAAMmB,KAAKH,EAAIrG,KAAKyG,YAAYC,KAAK,SAACC,GAAD,MAA4B,KAAlBA,EAAKC,WLomBrEtM,OAAOC,eAAepB,EAAS,cAC3BoC,OAAO,IAEXpC,EKzmBgBgN,cALT,IAAMI,eAAY,WACZM,YAAW,kBACXC,WAAW,WACXC,UAAU,kBL2nBjB,SAAU3N,EAAQD,EAASQ,GAEjC,YASA,SAASwB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHhB,OAAOC,eAAepB,EAAS,cAC3BoC,OAAO,GAGX,IAAIQ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI1C,GAAI,EAAGA,EAAI0C,EAAMC,OAAQ3C,IAAK,CAAE,GAAI4C,GAAaF,EAAM1C,EAAI4C,GAAW3B,WAAa2B,EAAW3B,aAAc,EAAO2B,EAAW5B,cAAe,EAAU,SAAW4B,KAAYA,EAAWC,UAAW,GAAM/B,OAAOC,eAAe0B,EAAQG,EAAWE,IAAKF,IAAiB,MAAO,UAAUf,EAAakB,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBX,EAAYN,UAAWwB,GAAiBC,GAAaR,EAAiBX,EAAamB,GAAqBnB,KAInhBlC,GM3oBAsG,ON2oBiB,WM1oB1B,QAAAA,GAAaL,EAASjF,GAAMgB,EAAA1B,KAAAgG,GACxBhG,KAAK2F,QAAUA,EACf3F,KAAKU,KAAOA,EACZV,KAAKoG,OAAkB,SAAT1F,ENwqBlB,MAxBA4B,GAAa0D,IACTnD,IAAK,aACLf,MAAO,WM9oBP,MAAwC,KAAjC9B,KAAK2F,QAAQ4H,SAAS7K,UNkpB7BG,IAAK,cACLf,MAAO,WM/oBP,KAAM9B,KAAK2F,QAAQ4H,SAAS7K,OAAS,GACjC1C,KAAK2F,QAAQ6H,YAAYxN,KAAK2F,QAAQ4H,SAAS,ONopBnD1K,IAAK,mBACLf,MAAO,SMjpBM2G,GACbzI,KAAK2F,QAAQ8G,UAAYhE,KNopBzB5F,IAAK,aACLf,MAAO,SMlpBA2G,GACPzI,KAAK2F,QAAQsF,YAAYxC,ONspBtBzC","file":"simple-router.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleRouter = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Link = __webpack_require__(1);\n\nvar _Route = __webpack_require__(2);\n\nvar _Outlet = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// TODO: Add default routes to outlets as an option. \nvar SimpleRouter = exports.SimpleRouter = function () {\n    function SimpleRouter(config) {\n        _classCallCheck(this, SimpleRouter);\n\n        this._config = config; //Object.assign({}, defaultConfigOptions, config);\n        this._parser = new DOMParser();\n        this._links = [];\n        this._outlets = [];\n        this._routes = [];\n        this._routerState = [];\n        this._cssLoaded = false;\n        this._jsLoaded = false;\n        this._onCssLoaded = null;\n        this._onJsLoaded = null;\n        this._current = null;\n        this._ignoreHashChange = false;\n        this._defaultRoute = null;\n        // new Route('/', {\n        //     handler: () => {}\n        // }, '<p>This is the default route!</p>');\n        this._notFoundRoute = null;\n        // new Route(null, {\n        //     handler: () => {}\n        // }, '<p>The route you were looking for is unavailable...</p>');\n        window.onhashchange = this.onHashChange.bind(this);\n        this.findOutlets();\n        this.findLinks();\n\n        this._mainOutlet = this.getMainOutlet();\n    }\n\n    _createClass(SimpleRouter, [{\n        key: 'init',\n        value: function init() {\n            if (window.location.hash.length === 0) {\n                window.location.hash = '/'; // Route to the default route\n            } else {\n                this.onHashChange(); // Route to whatever is in the url\n            }\n        }\n    }, {\n        key: 'onHashChange',\n        value: function onHashChange(event) {\n            if (!this._ignoreHashChange) {\n                var link = {\n                    url: window.location.hash.substring(1),\n                    outlet: this._mainOutlet\n                };\n                this.initRouteHandling(link);\n            } else {\n                this._ignoreHashChange = false;\n            }\n        }\n    }, {\n        key: 'findOutlets',\n        value: function findOutlets() {\n            var _this = this;\n\n            var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'router-outlet';\n            var baseElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n\n            this.clearDeadOutlets();\n            baseElement.querySelectorAll('[' + selector + ']').forEach(function (element, index, array) {\n                if (!element.isRegistered) {\n                    element.isRegistered = true;\n                    _this._outlets.push(new _Outlet.Outlet(element, _this.getAttributeValueByName(element, selector)));\n                }\n            }, this);\n            if (!!!this.getMainOutlet()) {\n                throw \"A main outlet is required.\";\n            }\n        }\n    }, {\n        key: 'getMainOutlet',\n        value: function getMainOutlet() {\n            return this._outlets.find(function (item) {\n                return item.isMain === true;\n            });\n        }\n    }, {\n        key: 'clearDeadOutlets',\n        value: function clearDeadOutlets() {\n            this._outlets = this._outlets.filter(function (outlet, index, array) {\n                var stillExists = document.body.contains(outlet.element);\n                if (stillExists === false) {\n                    outlet.element.isRegistered = false;\n                    outlet.element = null;\n                }\n                return stillExists;\n            });\n        }\n    }, {\n        key: 'findOutletByName',\n        value: function findOutletByName(name) {\n            var outlet = this._outlets.find(function (possibleOutlet) {\n                return possibleOutlet.name == name;\n            }, this);\n            return outlet;\n        }\n    }, {\n        key: 'findLinks',\n        value: function findLinks() {\n            var _this2 = this;\n\n            var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'route-url';\n            var baseElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n\n            this.clearDeadLinks();\n            baseElement.querySelectorAll('[' + selector + ']').forEach(function (element) {\n                if (!element.isRegistered) {\n                    var targetOutlet = _this2.findOutletByName(_this2.getAttributeValueByName(element, 'route-target')) || _this2.getMainOutlet();\n                    _this2._links.push(new _Link.Link(element, targetOutlet, _this2.handleLinkClick.bind(_this2)));\n                }\n            }, this);\n        }\n    }, {\n        key: 'clearDeadLinks',\n        value: function clearDeadLinks() {\n            this._links = this._links.filter(function (link) {\n                var stillExists = document.body.contains(link.element);\n                if (stillExists === false) {\n                    link.element.isRegistered = false;\n                    link.element.onclick = null;\n                    link.element = null;\n                } // TODO: what is flink exists but outlet no longer exists...\n                return stillExists;\n            });\n        }\n    }, {\n        key: 'findRoute',\n        value: function findRoute(link) {\n            var specifiedRoute = link.url == this._defaultRoute.link ? this._defaultRoute : null;\n            var linkParts = link.url.split('/');\n            var params = null;\n\n            if (link.url === '/') {\n                specifiedRoute = this._defaultRoute;\n            } else {\n                specifiedRoute = this._routes.find(function (route) {\n                    var routeLinkParts = route.routeUrl.split('/');\n                    var doesItMatch = true;\n                    if (routeLinkParts.length === linkParts.length) {\n                        // Does the incomming link have the same number of parts as the route link being examined.\n                        params = {};\n                        for (var i = 0; i < routeLinkParts.length; i++) {\n                            if (linkParts[i] === routeLinkParts[i]) {\n                                console.log('these parts match!');\n                            } else if (routeLinkParts[i].startsWith(':') === true) {\n                                // This would be a route parameter. // TODO make optional params?\n                                params[routeLinkParts[i].substring(1)] = linkParts[i];\n                            } else {\n                                console.log('no route matches!');\n                                doesItMatch = false;\n                                break;\n                            }\n                        }\n                    } else {\n                        doesItMatch = false;\n                    }\n                    return doesItMatch;\n                }, this);\n            }\n\n            if (!specifiedRoute) {\n                specifiedRoute = this._notFoundRoute;\n                params = {\n                    linkProvided: link.url\n                };\n            }\n\n            return {\n                route: specifiedRoute,\n                params: params\n            };\n        }\n    }, {\n        key: 'handleLinkClick',\n        value: function handleLinkClick(event) {\n            event.preventDefault();\n            var ele = event.target;\n            var link = this._links.find(function (possibleLink) {\n                return ele === possibleLink.element;\n            });\n            this._ignoreHashChange = true;\n            window.location.hash = link.url;\n            this.initRouteHandling(link);\n        }\n    }, {\n        key: 'initRouteHandling',\n        value: function initRouteHandling(link) {\n            var selectedRoute = this.findRoute(link);\n            var state = {\n                link: link,\n                route: selectedRoute.route,\n                params: selectedRoute.params\n            };\n            this.handleRoute(state);\n        }\n    }, {\n        key: 'handleRoute',\n        value: function handleRoute(state) {\n            var isPrevAction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\n            if (state.route.postRouteProcessing) {\n                state.route.postRouteProcessing(state);\n            }\n\n            if (this.shouldFetch(state) === true) {\n\n                if (state.route.preFetchContent) {\n                    state.route.preFetchContent(state);\n                }\n\n                this.fetch(state);\n            } else {\n                state.templateTextInstance = state.route.content.html.template;\n                this.postFetch(state);\n            }\n        }\n    }, {\n        key: 'fetch',\n        value: function fetch(state) {\n            var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n            var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var _this3 = this;\n\n            var user = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            var password = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n            var xhr = new XMLHttpRequest();\n            xhr.open(method, state.route.content.html.url, true, user, password);\n            xhr.onerror = this.handleFetchFailure;\n            if (headers) {\n                headers.forEach(function (header) {\n                    xhr.setRequestHeader(header.name, header.value);\n                }, this);\n            }\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    //TODO: check xhr for info on what was returned.\n                    state.route.content.html.template = xhr.responseText;\n                    state.route.content.html.loaded = true;\n                    state.templateTextInstance = xhr.responseText;\n                    _this3.postFetch(state);\n                }\n            };\n            xhr.send();\n        }\n    }, {\n        key: 'handleFetchFailure',\n        value: function handleFetchFailure(evt) {\n            throw evt;\n        }\n    }, {\n        key: 'postFetch',\n        value: function postFetch(state) {\n            if (state.route.postFetchContent) {\n                state.route.postFetchContent(state);\n            }\n\n            if (this.shouldLoad(state)) {\n                if (state.route.preContentLoad) {\n                    state.route.preContentLoad(state);\n                }\n\n                //Load content into the DOM here.\n                this.load(state);\n            } else {\n                this.postLoad(state);\n            }\n        }\n    }, {\n        key: 'load',\n        value: function load(state) {\n            var _this4 = this;\n\n            var head = document.getElementsByTagName('head')[0];\n            var needToWait = false;\n            if (!!state.templateTextInstance) {\n                state.link.outlet.addContentString(state.templateTextInstance);\n            }\n\n            var content = state.route.content;\n\n            if (!!content.css && !content.css.loaded) {\n                // Right now we only support css loading via URL.\n                needToWait = true;\n                var link = document.createElement('link');\n                link.rel = 'stylesheet';\n                link.type = 'text/css';\n                link.href = content.css.url;\n                link.media = 'all';\n                link.onload = function () {\n                    state.route.content.css.loaded = true;\n                    _this4.postLoad(state);\n                };\n                head.appendChild(link);\n            }\n\n            if (!!content.js && !content.js.loaded) {\n                // Right now we only support js loading via URL.\n                needToWait = true;\n                var js = document.createElement('script');\n                js.type = 'application/javascript';\n                js.src = content.js.url;\n                js.onload = function () {\n                    state.route.content.js.loaded = true;\n                    _this4.postLoad(state);\n                };\n                head.appendChild(js);\n            }\n\n            if (!needToWait) {\n                this.postLoad(state);\n            }\n        }\n    }, {\n        key: 'postLoad',\n        value: function postLoad(state) {\n            var content = state.route.content;\n            if ((!content.html || content.html.loaded) && (!content.css || content.css.loaded) && (!content.js || content.js.loaded)) {\n                if (state.route.postContentLoad) {\n                    state.route.postContentLoad(state);\n                }\n\n                if (state.route.handler) {\n                    state.route.handler(state);\n                }\n\n                if (!!this._current) {\n                    this._routerState.push(this._currnet);\n                }\n\n                this._current = state;\n\n                if (state.route.postLinkHandler) {\n                    state.route.postLinkHandler(state);\n                }\n            } else {\n                console.log('Still waiting');\n            }\n        }\n    }, {\n        key: 'shouldFetch',\n        value: function shouldFetch(state) {\n            var shouldFetch = false;\n            var content = state.route.content;\n            if (!!content.html && !!content.html.url && !content.html.loaded) {\n                shouldFetch = true;\n            }\n            return shouldFetch;\n        }\n    }, {\n        key: 'shouldLoad',\n        value: function shouldLoad(state) {\n            var shouldLoad = false;\n            var content = state.route.content;\n            if (!!state.templateTextInstance) {\n                shouldLoad = true;\n            }\n            if (!shouldLoad && !!content.css && !!content.css.url) {\n                shouldLoad = true;\n            }\n            if (!shouldLoad && !!content.js && !!content.js.url) {\n                shouldLoad = true;\n            }\n            return shouldLoad;\n        }\n    }, {\n        key: 'handleLifeCycleFailure',\n        value: function handleLifeCycleFailure(data) {\n            // TODO: add on failure callback for route, and potentially check if data passed into here is error based on properties available.\n            console.error('A failure occurred in lifecycle chain!', typeof data === 'undefined' ? 'undefined' : _typeof(data), data);\n            // return Promise.reject(data);\n        }\n    }, {\n        key: 'registerRoute',\n        value: function registerRoute() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            if (_typeof(args[0]) === 'object' && args[0] !== null) {\n                console.log('registereing default route');\n                this._defaultRoute = new _Route.Route('/', args[0], args[1], args[2], args[3]);\n            } else if (typeof args[0] === 'string') {\n                console.log(args);\n                this._routes.push(new _Route.Route(args[0], args[1], args[2], args[3], args[4]));\n            } else if (args[0] === null) {\n                console.log('registereing not found route');\n                this._notFoundRoute = new _Route.Route(args[0], args[1], args[2], args[3], args[4]);\n            }\n        }\n    }, {\n        key: 'unregisterRoute',\n        value: function unregisterRoute(routeUrl) {\n            if (this._defaultRoute.url == routeUrl) {\n                this._defaultRoute.events = null;\n            } // TODO: Remove routes from array\n        }\n    }, {\n        key: 'getAttributeValueByName',\n        value: function getAttributeValueByName(element, attrName) {\n            return element.attributes.getNamedItem(attrName).value;\n        }\n    }]);\n\n    return SimpleRouter;\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Link = exports.Link = function Link(element, outlet, clickHandler) {\n    _classCallCheck(this, Link);\n\n    this.element = element;\n    this.url = this.element.attributes.getNamedItem('route-url').value;\n    this.outlet = outlet;\n    this.element.onclick = clickHandler;\n    // this.element.href += this.url;\n    this.element.isRegistered = true;\n    // let link = ele.attributes.getNamedItem(this._config.linkAttrName).value;\n    // let targetName = ele.attributes.getNamedItem(this._config.outletTargetAttrName).value;\n    // let targetOutlet = this.findOutletByName(targetName);\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Route = undefined;\n\nvar _Helpers = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Route =\n/**\n * \n * @param {string} routeUrl \n * @param {object} events \n * @param {string | null} template  \n * @param {string | null} styleUrl  \n * @param {string | null} scriptUrl  \n */\nexports.Route = function Route(routeUrl, events) {\n    var template = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var styleUrl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var scriptUrl = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n    _classCallCheck(this, Route);\n\n    this.routeUrl = routeUrl;\n\n    this.postRouteProcessing = events.postRouteProcessing;\n    this.preFetchContent = events.preFetchContent;\n    this.postFetchContent = events.postFetchContent;\n    this.handler = events.handler;\n    this.preContentLoad = events.preContentLoad;\n    this.postContentLoad = events.postContentLoad;\n    this.postRouteHandling = events.postRouteHandling;\n\n    var htmlSection = null;\n    if (!!template) {\n        htmlSection = {};\n        if (template.innerHTML && (0, _Helpers.isHTMLString)(template.innerHTML) === true) {\n            // Handle template objects being pased in the form of say a script tag with content inside of it.\n            htmlSection.template = template.innerHTML;\n            htmlSection.loaded = true;\n        } else if ((0, _Helpers.isHTMLString)(template) === true) {\n            // Handle a string HTML template\n            htmlSection.template = template;\n            htmlSection.loaded = true;\n        } else {\n            // Handle a URL which will need to be fetched upon routing.\n            htmlSection.url = template;\n            htmlSection.loaded = false;\n        }\n    }\n\n    this.content = {\n        html: htmlSection,\n        css: !!styleUrl ? {\n            url: styleUrl,\n            loaded: false\n        } : null,\n        js: !!scriptUrl ? {\n            url: scriptUrl,\n            loaded: false\n        } : null\n    };\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isHTMLString = isHTMLString;\nvar HTML_MIME = exports.HTML_MIME = 'text/html';\nvar XML_MIME = exports.XML_MIME = 'application/xml';\nvar CSS_MIME = exports.CSS_MIME = 'text/css';\nvar JS_MIME = exports.JS_MIME = 'application/js';\n\nfunction isHTMLString(str) {\n    var doc = new DOMParser().parseFromString(str, HTML_MIME);\n    var isHTML = Array.from(doc.body.childNodes).some(function (node) {\n        return node.nodeType === 1;\n    });\n    return isHTML;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Outlet = exports.Outlet = function () {\n    function Outlet(element, name) {\n        _classCallCheck(this, Outlet);\n\n        this.element = element;\n        this.name = name;\n        this.isMain = name === \"main\";\n    }\n\n    _createClass(Outlet, [{\n        key: \"hasContent\",\n        value: function hasContent() {\n            return this.element.children.length !== 0;\n        }\n    }, {\n        key: \"clearOutlet\",\n        value: function clearOutlet() {\n            while (this.element.children.length > 0) {\n                this.element.removeChild(this.element.children[0]);\n            }\n        }\n    }, {\n        key: \"addContentString\",\n        value: function addContentString(content) {\n            this.element.innerHTML = content;\n        }\n    }, {\n        key: \"addContent\",\n        value: function addContent(content) {\n            this.element.appendChild(content);\n        }\n    }]);\n\n    return Outlet;\n}();\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// simple-router.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 04f5504223cedca0c08b","import { Link } from './Link';\nimport { Route } from './Route';\nimport { Outlet } from './Outlet'\n// TODO: Add default routes to outlets as an option. \nexport class SimpleRouter {\n    constructor(config) {\n        this._config = config; //Object.assign({}, defaultConfigOptions, config);\n        this._parser = new DOMParser();\n        this._links = [];\n        this._outlets = [];\n        this._routes = [];\n        this._routerState = [];\n        this._cssLoaded = false;\n        this._jsLoaded = false;\n        this._onCssLoaded = null;\n        this._onJsLoaded = null;\n        this._current = null;\n        this._ignoreHashChange = false;\n        this._defaultRoute = null;\n        // new Route('/', {\n        //     handler: () => {}\n        // }, '<p>This is the default route!</p>');\n        this._notFoundRoute = null;\n        // new Route(null, {\n        //     handler: () => {}\n        // }, '<p>The route you were looking for is unavailable...</p>');\n        window.onhashchange = this.onHashChange.bind(this);\n        this.findOutlets();\n        this.findLinks();\n\n        this._mainOutlet = this.getMainOutlet();        \n\n    }\n\n    init () {\n        if (window.location.hash.length === 0) {\n            window.location.hash = '/'; // Route to the default route\n        } else {\n            this.onHashChange(); // Route to whatever is in the url\n        }\n    }\n\n    onHashChange(event) {\n        if(!this._ignoreHashChange) {\n            let link = {\n                url: window.location.hash.substring(1),\n                outlet: this._mainOutlet\n            }\n            this.initRouteHandling(link);\n        } else {\n            this._ignoreHashChange = false;\n        }\n    }\n\n    findOutlets(selector = 'router-outlet', baseElement = document) {\n        this.clearDeadOutlets();\n        baseElement.querySelectorAll(`[${selector}]`).forEach((element, index, array) => {\n            if (!element.isRegistered) {\n                element.isRegistered = true;\n                this._outlets.push(new Outlet(element, this.getAttributeValueByName(element, selector)));\n            }\n        }, this);\n        if (!!!this.getMainOutlet()) {\n            throw \"A main outlet is required.\"\n        }\n    }\n\n    getMainOutlet() {\n        return this._outlets.find((item) => {\n            return item.isMain === true;\n        });\n    }\n\n    clearDeadOutlets() {\n        this._outlets = this._outlets.filter((outlet, index, array) => {\n            const stillExists = document.body.contains(outlet.element);\n            if (stillExists === false) {\n                outlet.element.isRegistered = false;\n                outlet.element = null;\n            }\n            return stillExists;\n        });\n    }\n\n    findOutletByName(name) {\n        var outlet = this._outlets.find((possibleOutlet) => {\n            return (possibleOutlet.name == name);\n        }, this);\n        return outlet;\n    }\n\n    findLinks(selector = 'route-url', baseElement = document) {\n        this.clearDeadLinks();\n        baseElement.querySelectorAll(`[${selector}]`).forEach((element) => {\n            if (!element.isRegistered) {\n                let targetOutlet = this.findOutletByName(this.getAttributeValueByName(element, 'route-target')) || this.getMainOutlet();\n                this._links.push(new Link(element, targetOutlet, this.handleLinkClick.bind(this)));\n            }\n        }, this);\n    }\n\n    clearDeadLinks() {\n        this._links = this._links.filter((link) => {\n            const stillExists = document.body.contains(link.element);\n            if (stillExists === false) {\n                link.element.isRegistered = false;\n                link.element.onclick = null;\n                link.element = null;\n            } // TODO: what is flink exists but outlet no longer exists...\n            return stillExists;\n        });\n    }\n\n    findRoute(link) {\n        let specifiedRoute = (link.url == this._defaultRoute.link) ? this._defaultRoute : null;\n        const linkParts = link.url.split('/');\n        let params = null;\n\n        if (link.url === '/') {\n            specifiedRoute = this._defaultRoute;\n        } else {\n            specifiedRoute = this._routes.find((route) => {\n                const routeLinkParts = route.routeUrl.split('/');\n                let doesItMatch = true;\n                if (routeLinkParts.length === linkParts.length) { // Does the incomming link have the same number of parts as the route link being examined.\n                    params = {};\n                    for (let i = 0; i < routeLinkParts.length; i++) {\n                        if (linkParts[i] === routeLinkParts[i]) {\n                            console.log('these parts match!')\n                        } else if (routeLinkParts[i].startsWith(':') === true) { // This would be a route parameter. // TODO make optional params?\n                            params[routeLinkParts[i].substring(1)] = linkParts[i];\n                        } else {\n                            console.log('no route matches!');\n                            doesItMatch = false;\n                            break;\n                        }\n                    }\n                } else {\n                    doesItMatch = false;\n                }\n                return doesItMatch;\n            }, this);\n        }\n\n        if (!specifiedRoute) {\n            specifiedRoute = this._notFoundRoute;\n            params = {\n                linkProvided: link.url\n            }\n        }\n\n        return {\n            route: specifiedRoute,\n            params: params\n        };\n    }\n\n    handleLinkClick(event) {\n        event.preventDefault();\n        let ele = event.target;\n        let link = this._links.find((possibleLink) => {\n            return ele === possibleLink.element;\n        });\n        this._ignoreHashChange = true;\n        window.location.hash = link.url;\n        this.initRouteHandling(link);\n    }\n\n    initRouteHandling (link) {\n        const selectedRoute = this.findRoute(link);\n        const state = {\n            link: link,\n            route: selectedRoute.route,\n            params: selectedRoute.params\n        }\n        this.handleRoute(state);\n    }\n\n    handleRoute(state, isPrevAction = false) {\n\n        if (state.route.postRouteProcessing) {\n            state.route.postRouteProcessing(state);\n        }\n\n        if(this.shouldFetch(state) === true) {\n\n            if (state.route.preFetchContent) {\n                state.route.preFetchContent(state);\n            }\n\n            this.fetch(state);\n        } else {\n            state.templateTextInstance = state.route.content.html.template;\n            this.postFetch(state);\n        }\n\n    }\n    \n    fetch(state, method = \"GET\", headers = null, user = null, password = null) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(method, state.route.content.html.url, true, user, password);\n        xhr.onerror = this.handleFetchFailure;\n        if(headers) {\n            headers.forEach(function(header) {\n                xhr.setRequestHeader(header.name, header.value);\n            }, this);\n        }\n        xhr.onreadystatechange = () => {\n            if(xhr.readyState === XMLHttpRequest.DONE) {\n                //TODO: check xhr for info on what was returned.\n                state.route.content.html.template = xhr.responseText;\n                state.route.content.html.loaded = true;\n                state.templateTextInstance = xhr.responseText;\n                this.postFetch(state);\n            }\n        }\n        xhr.send();\n\n    }\n\n    handleFetchFailure(evt) {\n        throw evt;\n    }\n\n    postFetch(state) {\n        if (state.route.postFetchContent) {\n            state.route.postFetchContent(state);\n        }\n\n        if(this.shouldLoad(state)) {\n            if (state.route.preContentLoad) {\n                state.route.preContentLoad(state);\n            }\n        \n            //Load content into the DOM here.\n            this.load(state);\n            \n        } else {\n            this.postLoad(state);\n        }        \n    }\n\n    load(state) {\n        let head = document.getElementsByTagName('head')[0];\n        let needToWait = false;\n        if (!!state.templateTextInstance) {\n            state.link.outlet.addContentString(state.templateTextInstance)\n        }\n\n        const content = state.route.content;\n        \n        if(!!content.css && !content.css.loaded) { // Right now we only support css loading via URL.\n            needToWait = true;\n            let link = document.createElement('link');\n            link.rel  = 'stylesheet';\n            link.type = 'text/css';\n            link.href = content.css.url;\n            link.media = 'all';\n            link.onload = () => {\n                state.route.content.css.loaded = true;\n                this.postLoad(state);\n            };\n            head.appendChild(link);\n        }\n\n        if(!!content.js && !content.js.loaded) { // Right now we only support js loading via URL.\n            needToWait = true;\n            let js = document.createElement('script');\n            js.type = 'application/javascript';\n            js.src = content.js.url\n            js.onload = () => {\n                state.route.content.js.loaded = true;\n                this.postLoad(state);\n            };\n            head.appendChild(js);\n        }\n\n        if (!needToWait) {\n            this.postLoad(state);\n        }\n    }\n\n    postLoad(state) {\n        const content = state.route.content;\n        if((!content.html || content.html.loaded) && (!content.css || content.css.loaded) && (!content.js || content.js.loaded)) {\n            if (state.route.postContentLoad) {\n                state.route.postContentLoad(state);\n            }\n\n            if (state.route.handler) {\n                state.route.handler(state);\n            }\n\n            if(!!this._current) {\n                this._routerState.push(this._currnet);\n            }\n            \n            this._current = state;\n\n            if (state.route.postLinkHandler) {\n                state.route.postLinkHandler(state);\n            }\n        } else {\n            console.log('Still waiting');\n        }\n    }\n\n    shouldFetch(state) {\n        let shouldFetch = false;\n        const content = state.route.content;\n        if (!!content.html && !!content.html.url && !content.html.loaded) {\n            shouldFetch = true;\n        }\n        return shouldFetch;\n    }\n\n    shouldLoad (state) {\n        let shouldLoad = false;\n        const content = state.route.content;\n        if (!!state.templateTextInstance) {\n            shouldLoad = true;\n        }\n        if (!shouldLoad && !!content.css && !!content.css.url) {\n            shouldLoad = true;\n        }\n        if (!shouldLoad && !!content.js && !!content.js.url) {\n            shouldLoad = true;\n        }\n        return shouldLoad;\n    }\n\n    handleLifeCycleFailure(data) {\n        // TODO: add on failure callback for route, and potentially check if data passed into here is error based on properties available.\n        console.error('A failure occurred in lifecycle chain!', typeof data, data);\n        // return Promise.reject(data);\n    }\n\n    registerRoute(...args) {\n        if (typeof args[0] === 'object' && args[0] !== null) {\n            console.log('registereing default route');\n            this._defaultRoute = new Route('/', args[0], args[1], args[2], args[3])\n        } else if (typeof args[0] === 'string') {\n            console.log(args);\n            this._routes.push(\n                new Route(args[0], args[1], args[2], args[3], args[4])\n            );\n        } else if (args[0] === null) {\n            console.log('registereing not found route');\n            this._notFoundRoute = new Route(args[0], args[1], args[2], args[3], args[4])\n        }\n    }\n\n    unregisterRoute(routeUrl) {\n        if (this._defaultRoute.url == routeUrl) {\n            this._defaultRoute.events = null;\n        } // TODO: Remove routes from array\n    }\n\n    getAttributeValueByName (element, attrName) {\n        return element.attributes.getNamedItem(attrName).value;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export class Link {\n    constructor(element, outlet, clickHandler) {\n        this.element = element;\n        this.url = this.element.attributes.getNamedItem('route-url').value;\n        this.outlet = outlet;\n        this.element.onclick = clickHandler;\n        // this.element.href += this.url;\n        this.element.isRegistered = true;\n        // let link = ele.attributes.getNamedItem(this._config.linkAttrName).value;\n        // let targetName = ele.attributes.getNamedItem(this._config.outletTargetAttrName).value;\n        // let targetOutlet = this.findOutletByName(targetName);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Link.js","import { isHTMLString } from './Helpers';\n\nexport class Route {\n    /**\n     * \n     * @param {string} routeUrl \n     * @param {object} events \n     * @param {string | null} template  \n     * @param {string | null} styleUrl  \n     * @param {string | null} scriptUrl  \n     */\n    constructor(routeUrl, events, template = null, styleUrl = null, scriptUrl = null) {\n        this.routeUrl = routeUrl;\n\n        this.postRouteProcessing = events.postRouteProcessing;\n        this.preFetchContent = events.preFetchContent;\n        this.postFetchContent = events.postFetchContent;\n        this.handler = events.handler;\n        this.preContentLoad = events.preContentLoad;\n        this.postContentLoad = events.postContentLoad;\n        this.postRouteHandling = events.postRouteHandling;\n\n        let htmlSection = null;\n        if(!!template) {\n            htmlSection = {};\n            if (template.innerHTML && isHTMLString(template.innerHTML) === true) { // Handle template objects being pased in the form of say a script tag with content inside of it.\n                htmlSection.template = template.innerHTML;\n                htmlSection.loaded = true;\n            } else if (isHTMLString(template) === true) { // Handle a string HTML template\n                htmlSection.template = template;\n                htmlSection.loaded = true;\n            } else { // Handle a URL which will need to be fetched upon routing.\n                htmlSection.url = template;\n                htmlSection.loaded = false;\n            }\n        }\n\n        this.content = {\n            html: htmlSection,\n            css: (!!styleUrl) ? {\n                url: styleUrl,\n                loaded: false\n            } : null,\n            js: (!!scriptUrl) ? {\n                url: scriptUrl,\n                loaded: false\n            } : null\n        };\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Route.js","export const HTML_MIME = 'text/html';\nexport const XML_MIME = 'application/xml';\nexport const CSS_MIME = 'text/css';\nexport const JS_MIME = 'application/js'\n\nexport function isHTMLString(str) {\n    var doc = new DOMParser().parseFromString(str, HTML_MIME);\n    let isHTML = Array.from(doc.body.childNodes).some((node) => node.nodeType === 1)\n    return isHTML;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Helpers.js","export class Outlet {\n    constructor (element, name) {\n        this.element = element;\n        this.name = name;\n        this.isMain = name === \"main\";\n    }\n\n    hasContent () {\n        return this.element.children.length !== 0;\n    }\n\n    clearOutlet () {\n        while(this.element.children.length > 0) {\n            this.element.removeChild(this.element.children[0]);\n        }\n    }\n\n    addContentString(content) {\n        this.element.innerHTML = content;\n    }\n\n    addContent(content) {\n        this.element.appendChild(content);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Outlet.js"],"sourceRoot":""}